// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[3..5], a=ram0,
                                         b=ram1,
                                         c=ram2,
                                         d=ram3,
                                         e=ram4,
                                         f=ram5,
                                         g=ram6,
                                         h=ram7);
    RAM8(in=in, load=ram0, address=address[0..2], out=reg0);
    RAM8(in=in, load=ram1, address=address[0..2], out=reg1);
    RAM8(in=in, load=ram2, address=address[0..2], out=reg2);
    RAM8(in=in, load=ram3, address=address[0..2], out=reg3);
    RAM8(in=in, load=ram4, address=address[0..2], out=reg4);
    RAM8(in=in, load=ram5, address=address[0..2], out=reg5);
    RAM8(in=in, load=ram6, address=address[0..2], out=reg6);
    RAM8(in=in, load=ram7, address=address[0..2], out=reg7);
    Mux8Way16(a=reg0,
              b=reg1,
              c=reg2,
              d=reg3,
              e=reg4,
              f=reg5,
              g=reg6,
              h=reg7, sel=address[3..5], out=out);
}
