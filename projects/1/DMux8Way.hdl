// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/DMux8Way.hdl
/**
 * 8-way demultiplexor:
 * [a, b, c, d, e, f, g, h] = [in, 0,  0,  0,  0,  0,  0,  0] if sel = 000
 *                            [0, in,  0,  0,  0,  0,  0,  0] if sel = 001
 *                            [0,  0, in,  0,  0,  0,  0,  0] if sel = 010
 *                            [0,  0,  0, in,  0,  0,  0,  0] if sel = 011
 *                            [0,  0,  0,  0, in,  0,  0,  0] if sel = 100
 *                            [0,  0,  0,  0,  0, in,  0,  0] if sel = 101
 *                            [0,  0,  0,  0,  0,  0, in,  0] if sel = 110
 *                            [0,  0,  0,  0,  0,  0,  0, in] if sel = 111
 */
CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    Not(in=sel[2], out=NOTsel2);
    /*
     * Do DMux4Way of both the same way, but zero out one depending on sel bits.
     */
    DMux4Way(in=in, sel=sel[0..1], a=Da, b=Db, c=Dc, d=Dd);
    And(a=Da, b=NOTsel2, out=a);
    And(a=Db, b=NOTsel2, out=b);
    And(a=Dc, b=NOTsel2, out=c);
    And(a=Dd, b=NOTsel2, out=d);

    DMux4Way(in=in, sel=sel[0..1], a=De, b=Df, c=Dg, d=Dh);
    And(a=De, b=sel[2], out=e);
    And(a=Df, b=sel[2], out=f);
    And(a=Dg, b=sel[2], out=g);
    And(a=Dh, b=sel[2], out=h);
}
